{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\user\\\\Desktop\\\\commentsAngular\\\\comments\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { DataService } from './data.service';\nlet AppComponent = class AppComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.newCommentText = '';\n    this.allInfo = {};\n    this.allComments = [];\n  }\n\n  load() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.allInfo = yield _this.dataService.getUsers();\n      _this.allComments = _this.allInfo.comments;\n    })();\n  }\n\n  ngOnInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.load();\n    })();\n  }\n\n  newComment() {\n    const date = new Date();\n    const newContent = {\n      id: Date.now(),\n      content: this.newCommentText,\n      createdAt: `${date.getDay()}/${date.getMonth() + 1}/${date.getFullYear()}`,\n      score: 0,\n      user: {\n        image: this.allInfo.currentUser.image,\n        username: this.allInfo.currentUser.username\n      },\n      replies: []\n    };\n    this.allComments.push(newContent);\n    this.newCommentText = '';\n  }\n\n  replyComment(obj) {\n    var _a;\n\n    const date = new Date();\n    const newContent = {\n      id: Date.now(),\n      content: obj.content,\n      createdAt: `${date.getDay()}/${date.getMonth() + 1}/${date.getFullYear()}`,\n      score: 0,\n      user: {\n        image: this.allInfo.currentUser.image,\n        username: this.allInfo.currentUser.username\n      }\n    };\n\n    for (let i = 0; i < this.allComments.length; i++) {\n      if (this.allComments[i].id === obj.id) {\n        (_a = this.allComments[i].replies) === null || _a === void 0 ? void 0 : _a.push(newContent);\n      }\n    }\n  } //increment function\n\n\n  incrementScore(id) {\n    var _a;\n\n    for (let i = 0; i < this.allComments.length; i++) {\n      if (this.allComments[i].id === id && this.allComments[i].score >= 0) {\n        this.allComments[i].score++;\n        this.allComments.sort((a, b) => a.score > b.score ? -1 : 1);\n      }\n\n      if (this.allComments[i].replies) {\n        for (let j = 0; j < ((_a = this.allComments[i].replies) === null || _a === void 0 ? void 0 : _a.length); j++) {\n          if (this.allComments[i].replies[j].id === id && this.allComments[i].replies[j].score >= 0) {\n            this.allComments[i].replies[j].score++;\n          }\n        }\n      }\n    }\n  } //decrement function\n\n\n  decrementScore(id) {\n    for (let i = 0; i < this.allComments.length; i++) {\n      if (this.allComments[i].id === id && this.allComments[i].score > 0) {\n        this.allComments[i].score--;\n        this.allComments.sort((a, b) => a.score > b.score ? -1 : 1);\n      }\n\n      if (this.allComments[i].replies) {\n        for (let j = 0; j < this.allComments[i].replies.length; j++) {\n          if (this.allComments[i].replies[j].id === id && this.allComments[i].replies[j].score > 0) {\n            this.allComments[i].replies[j].score--;\n          }\n        }\n      }\n    }\n  }\n\n  deleteComment(id) {\n    this.allComments = this.allComments.filter(comments => {\n      if (comments.replies) {\n        comments.replies = comments.replies.filter(replyComment => {\n          return replyComment.id !== id;\n        });\n      }\n\n      return comments.id !== id;\n    });\n  }\n\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [DataService]\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"sources":["C:/Users/user/Desktop/commentsAngular/comments/src/app/app.component.ts"],"names":["__decorate","Component","DataService","AppComponent","constructor","dataService","newCommentText","allInfo","allComments","load","getUsers","comments","ngOnInit","newComment","date","Date","newContent","id","now","content","createdAt","getDay","getMonth","getFullYear","score","user","image","currentUser","username","replies","push","replyComment","obj","_a","i","length","incrementScore","sort","a","b","j","decrementScore","deleteComment","filter","selector","templateUrl","styleUrls","providers"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,IAAIC,YAAY,GAAG,MAAMA,YAAN,CAAmB;AAClCC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACH;;AACKC,EAAAA,IAAI,GAAG;AAAA;;AAAA;AACT,MAAA,KAAI,CAACF,OAAL,SAAqB,KAAI,CAACF,WAAL,CAAiBK,QAAjB,EAArB;AACA,MAAA,KAAI,CAACF,WAAL,GAAmB,KAAI,CAACD,OAAL,CAAaI,QAAhC;AAFS;AAGZ;;AAEKC,EAAAA,QAAQ,GAAG;AAAA;;AAAA;AACb,YAAM,MAAI,CAACH,IAAL,EAAN;AADa;AAEhB;;AACDI,EAAAA,UAAU,GAAG;AACT,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,UAAU,GAAG;AACfC,MAAAA,EAAE,EAAEF,IAAI,CAACG,GAAL,EADW;AAEfC,MAAAA,OAAO,EAAE,KAAKb,cAFC;AAGfc,MAAAA,SAAS,EAAG,GAAEN,IAAI,CAACO,MAAL,EAAc,IAAGP,IAAI,CAACQ,QAAL,KAAkB,CAAE,IAAGR,IAAI,CAACS,WAAL,EAAmB,EAH1D;AAIfC,MAAAA,KAAK,EAAE,CAJQ;AAKfC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE,KAAKnB,OAAL,CAAaoB,WAAb,CAAyBD,KAD9B;AAEFE,QAAAA,QAAQ,EAAE,KAAKrB,OAAL,CAAaoB,WAAb,CAAyBC;AAFjC,OALS;AASfC,MAAAA,OAAO,EAAE;AATM,KAAnB;AAWA,SAAKrB,WAAL,CAAiBsB,IAAjB,CAAsBd,UAAtB;AACA,SAAKV,cAAL,GAAsB,EAAtB;AACH;;AACDyB,EAAAA,YAAY,CAACC,GAAD,EAAM;AACd,QAAIC,EAAJ;;AACA,UAAMnB,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,UAAU,GAAG;AACfC,MAAAA,EAAE,EAAEF,IAAI,CAACG,GAAL,EADW;AAEfC,MAAAA,OAAO,EAAEa,GAAG,CAACb,OAFE;AAGfC,MAAAA,SAAS,EAAG,GAAEN,IAAI,CAACO,MAAL,EAAc,IAAGP,IAAI,CAACQ,QAAL,KAAkB,CAAE,IAAGR,IAAI,CAACS,WAAL,EAAmB,EAH1D;AAIfC,MAAAA,KAAK,EAAE,CAJQ;AAKfC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE,KAAKnB,OAAL,CAAaoB,WAAb,CAAyBD,KAD9B;AAEFE,QAAAA,QAAQ,EAAE,KAAKrB,OAAL,CAAaoB,WAAb,CAAyBC;AAFjC;AALS,KAAnB;;AAUA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1B,WAAL,CAAiB2B,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,UAAI,KAAK1B,WAAL,CAAiB0B,CAAjB,EAAoBjB,EAApB,KAA2Be,GAAG,CAACf,EAAnC,EAAuC;AACnC,SAACgB,EAAE,GAAG,KAAKzB,WAAL,CAAiB0B,CAAjB,EAAoBL,OAA1B,MAAuC,IAAvC,IAA+CI,EAAE,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,EAAE,CAACH,IAAH,CAAQd,UAAR,CAAxE;AACH;AACJ;AACJ,GAjDiC,CAkDlC;;;AACAoB,EAAAA,cAAc,CAACnB,EAAD,EAAK;AACf,QAAIgB,EAAJ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1B,WAAL,CAAiB2B,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,UAAI,KAAK1B,WAAL,CAAiB0B,CAAjB,EAAoBjB,EAApB,KAA2BA,EAA3B,IAAiC,KAAKT,WAAL,CAAiB0B,CAAjB,EAAoBV,KAApB,IAA6B,CAAlE,EAAqE;AACjE,aAAKhB,WAAL,CAAiB0B,CAAjB,EAAoBV,KAApB;AACA,aAAKhB,WAAL,CAAiB6B,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACd,KAAF,GAAUe,CAAC,CAACf,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAA1D;AACH;;AACD,UAAI,KAAKhB,WAAL,CAAiB0B,CAAjB,EAAoBL,OAAxB,EAAiC;AAC7B,aAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAACP,EAAE,GAAG,KAAKzB,WAAL,CAAiB0B,CAAjB,EAAoBL,OAA1B,MAAuC,IAAvC,IAA+CI,EAAE,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,EAAE,CAACE,MAA/E,CAAjB,EAAyGK,CAAC,EAA1G,EAA8G;AAC1G,cAAI,KAAKhC,WAAL,CAAiB0B,CAAjB,EAAoBL,OAApB,CAA4BW,CAA5B,EAA+BvB,EAA/B,KAAsCA,EAAtC,IAA4C,KAAKT,WAAL,CAAiB0B,CAAjB,EAAoBL,OAApB,CAA4BW,CAA5B,EAA+BhB,KAA/B,IAAwC,CAAxF,EAA2F;AACvF,iBAAKhB,WAAL,CAAiB0B,CAAjB,EAAoBL,OAApB,CAA4BW,CAA5B,EAA+BhB,KAA/B;AACH;AACJ;AACJ;AACJ;AACJ,GAlEiC,CAmElC;;;AACAiB,EAAAA,cAAc,CAACxB,EAAD,EAAK;AACf,SAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1B,WAAL,CAAiB2B,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,UAAI,KAAK1B,WAAL,CAAiB0B,CAAjB,EAAoBjB,EAApB,KAA2BA,EAA3B,IAAiC,KAAKT,WAAL,CAAiB0B,CAAjB,EAAoBV,KAApB,GAA4B,CAAjE,EAAoE;AAChE,aAAKhB,WAAL,CAAiB0B,CAAjB,EAAoBV,KAApB;AACA,aAAKhB,WAAL,CAAiB6B,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACd,KAAF,GAAUe,CAAC,CAACf,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAA1D;AACH;;AACD,UAAI,KAAKhB,WAAL,CAAiB0B,CAAjB,EAAoBL,OAAxB,EAAiC;AAC7B,aAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhC,WAAL,CAAiB0B,CAAjB,EAAoBL,OAApB,CAA4BM,MAAhD,EAAwDK,CAAC,EAAzD,EAA6D;AACzD,cAAI,KAAKhC,WAAL,CAAiB0B,CAAjB,EAAoBL,OAApB,CAA4BW,CAA5B,EAA+BvB,EAA/B,KAAsCA,EAAtC,IAA4C,KAAKT,WAAL,CAAiB0B,CAAjB,EAAoBL,OAApB,CAA4BW,CAA5B,EAA+BhB,KAA/B,GAAuC,CAAvF,EAA0F;AACtF,iBAAKhB,WAAL,CAAiB0B,CAAjB,EAAoBL,OAApB,CAA4BW,CAA5B,EAA+BhB,KAA/B;AACH;AACJ;AACJ;AACJ;AACJ;;AACDkB,EAAAA,aAAa,CAACzB,EAAD,EAAK;AACd,SAAKT,WAAL,GAAmB,KAAKA,WAAL,CAAiBmC,MAAjB,CAAyBhC,QAAD,IAAc;AACrD,UAAIA,QAAQ,CAACkB,OAAb,EAAsB;AAClBlB,QAAAA,QAAQ,CAACkB,OAAT,GAAmBlB,QAAQ,CAACkB,OAAT,CAAiBc,MAAjB,CAAyBZ,YAAD,IAAkB;AACzD,iBAAOA,YAAY,CAACd,EAAb,KAAoBA,EAA3B;AACH,SAFkB,CAAnB;AAGH;;AACD,aAAON,QAAQ,CAACM,EAAT,KAAgBA,EAAvB;AACH,KAPkB,CAAnB;AAQH;;AA5FiC,CAAtC;AA8FAd,YAAY,GAAGH,UAAU,CAAC,CACtBC,SAAS,CAAC;AACN2C,EAAAA,QAAQ,EAAE,UADJ;AAENC,EAAAA,WAAW,EAAE,sBAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,sBAAD,CAHL;AAINC,EAAAA,SAAS,EAAE,CAAC7C,WAAD;AAJL,CAAD,CADa,CAAD,EAOtBC,YAPsB,CAAzB;AAQA,SAASA,YAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nlet AppComponent = class AppComponent {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n        this.newCommentText = '';\r\n        this.allInfo = {};\r\n        this.allComments = [];\r\n    }\r\n    async load() {\r\n        this.allInfo = await this.dataService.getUsers();\r\n        this.allComments = this.allInfo.comments;\r\n    }\r\n    ;\r\n    async ngOnInit() {\r\n        await this.load();\r\n    }\r\n    newComment() {\r\n        const date = new Date();\r\n        const newContent = {\r\n            id: Date.now(),\r\n            content: this.newCommentText,\r\n            createdAt: `${date.getDay()}/${date.getMonth() + 1}/${date.getFullYear()}`,\r\n            score: 0,\r\n            user: {\r\n                image: this.allInfo.currentUser.image,\r\n                username: this.allInfo.currentUser.username,\r\n            },\r\n            replies: [],\r\n        };\r\n        this.allComments.push(newContent);\r\n        this.newCommentText = '';\r\n    }\r\n    replyComment(obj) {\r\n        var _a;\r\n        const date = new Date();\r\n        const newContent = {\r\n            id: Date.now(),\r\n            content: obj.content,\r\n            createdAt: `${date.getDay()}/${date.getMonth() + 1}/${date.getFullYear()}`,\r\n            score: 0,\r\n            user: {\r\n                image: this.allInfo.currentUser.image,\r\n                username: this.allInfo.currentUser.username,\r\n            }\r\n        };\r\n        for (let i = 0; i < this.allComments.length; i++) {\r\n            if (this.allComments[i].id === obj.id) {\r\n                (_a = this.allComments[i].replies) === null || _a === void 0 ? void 0 : _a.push(newContent);\r\n            }\r\n        }\r\n    }\r\n    //increment function\r\n    incrementScore(id) {\r\n        var _a;\r\n        for (let i = 0; i < this.allComments.length; i++) {\r\n            if (this.allComments[i].id === id && this.allComments[i].score >= 0) {\r\n                this.allComments[i].score++;\r\n                this.allComments.sort((a, b) => (a.score > b.score ? -1 : 1));\r\n            }\r\n            if (this.allComments[i].replies) {\r\n                for (let j = 0; j < ((_a = this.allComments[i].replies) === null || _a === void 0 ? void 0 : _a.length); j++) {\r\n                    if (this.allComments[i].replies[j].id === id && this.allComments[i].replies[j].score >= 0) {\r\n                        this.allComments[i].replies[j].score++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //decrement function\r\n    decrementScore(id) {\r\n        for (let i = 0; i < this.allComments.length; i++) {\r\n            if (this.allComments[i].id === id && this.allComments[i].score > 0) {\r\n                this.allComments[i].score--;\r\n                this.allComments.sort((a, b) => (a.score > b.score ? -1 : 1));\r\n            }\r\n            if (this.allComments[i].replies) {\r\n                for (let j = 0; j < this.allComments[i].replies.length; j++) {\r\n                    if (this.allComments[i].replies[j].id === id && this.allComments[i].replies[j].score > 0) {\r\n                        this.allComments[i].replies[j].score--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    deleteComment(id) {\r\n        this.allComments = this.allComments.filter((comments) => {\r\n            if (comments.replies) {\r\n                comments.replies = comments.replies.filter((replyComment) => {\r\n                    return replyComment.id !== id;\r\n                });\r\n            }\r\n            return comments.id !== id;\r\n        });\r\n    }\r\n};\r\nAppComponent = __decorate([\r\n    Component({\r\n        selector: 'app-root',\r\n        templateUrl: './app.component.html',\r\n        styleUrls: ['./app.component.scss'],\r\n        providers: [DataService]\r\n    })\r\n], AppComponent);\r\nexport { AppComponent };\r\n"]},"metadata":{},"sourceType":"module"}